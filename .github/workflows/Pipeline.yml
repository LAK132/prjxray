name: Pipeline

on:
  workflow_call:

jobs:


  Dependencies:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.params.outputs.image }}
    permissions:
      packages: write

    steps:

      - id: params
        run: echo '::set-output name=image::ghcr.io/f4pga/prjxray/ci'

      - run: |
          docker build -t ${{ steps.params.outputs.image }} - <<EOF
          FROM ubuntu:bionic
          RUN apt-get update -qq \
            && DEBIAN_FRONTEND=noninteractive apt-get -y install --no-install-recommends \
               bash \
               bison \
               build-essential \
               ca-certificates \
               clang-format \
               cmake \
               psmisc \
               colordiff \
               coreutils \
               git \
               flex \
               python3 \
               python3-dev \
               python3-venv \
               xsltproc \
            && apt-get autoclean && apt-get clean && apt-get -y autoremove \
            && update-ca-certificates \
            && rm -rf /var/lib/apt/lists/*

      - uses: pyTooling/Actions/with-post-step@r0
        with:
          main: |
            echo '${{ github.token }}' | docker login ghcr.io -u gha --password-stdin
            docker push ${{ steps.params.outputs.image }}
          post: docker logout ghcr.io


  BuildDatabase:
    needs: Dependencies
    runs-on: [self-hosted, Linux, X64]
    container: ${{ fromJson(needs.Dependencies.outputs.image) }}

    strategy:
      fail-fast: false
      matrix:
        family: ['artix7', 'zynq7', 'kintex7', 'spartan7']

    env:
      ALLOW_ROOT: true
      GHA_EXTERNAL_DISK: "tools"
      XILINX_LOCAL_USER_DATA: "no"

    steps:

      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build
        run: make build --output-sync=target --warn-undefined-variables -j$(nproc)

      - name: Environment
        run: make env --output-sync=target --warn-undefined-variables

      - name: Run Test
        run: .github/workflows/scripts/db.sh
        env:
          XRAY_SETTINGS: ${{ matrix.family }}

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: ${{ matrix.family }}
          path: |
            **/results*.gz
            **/plot_*.svg
            **/diff.html
            **/diff.json
            **/diff.patch
            **/*sponge_log.xml
            **/fuzzers/*.tgz
            **/database/${{ matrix.family }}/**"


  Tests:
    needs: Dependencies
    runs-on: [self-hosted, Linux, X64]
    container: ${{ fromJson(needs.Dependencies.outputs.image) }}

    env:
      ALLOW_ROOT: true

    steps:

      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build
        run: make build --output-sync=target --warn-undefined-variables -j$(nproc)

      - name: Environment
        run: make env --output-sync=target --warn-undefined-variables

      - name: Run Test
        run: make test --output-sync=target --warn-undefined-variables

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          path: |
            **/results*.gz
            **/plot_*.svg
